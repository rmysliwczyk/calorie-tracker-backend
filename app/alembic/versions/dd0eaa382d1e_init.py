"""init

Revision ID: dd0eaa382d1e
Revises: 
Create Date: 2025-06-05 20:31:30.788653

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
import sqlmodel


# revision identifiers, used by Alembic.
revision: str = 'dd0eaa382d1e'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('user',
    sa.Column('username', sqlmodel.sql.sqltypes.AutoString(length=64), nullable=False),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('is_admin', sa.Boolean(), nullable=False),
    sa.Column('hashed_password', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('username')
    )
    op.create_table('foodcollection',
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(length=64), nullable=False),
    sa.Column('portion_weight', sa.Numeric(scale=2), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('edit_locked', sa.Boolean(), nullable=False),
    sa.Column('creator_id', sa.Integer(), nullable=False),
    sa.Column('calories', sa.Numeric(scale=2), nullable=False),
    sa.Column('fats', sa.Numeric(scale=2), nullable=False),
    sa.Column('carbs', sa.Numeric(scale=2), nullable=False),
    sa.Column('protein', sa.Numeric(scale=2), nullable=False),
    sa.Column('total_weight', sa.Numeric(scale=2), nullable=False),
    sa.ForeignKeyConstraint(['creator_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('fooditem',
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(length=64), nullable=False),
    sa.Column('brand', sqlmodel.sql.sqltypes.AutoString(length=64), nullable=True),
    sa.Column('calories', sa.Numeric(scale=2), nullable=False),
    sa.Column('fats', sa.Numeric(scale=2), nullable=False),
    sa.Column('carbs', sa.Numeric(scale=2), nullable=False),
    sa.Column('protein', sa.Numeric(scale=2), nullable=False),
    sa.Column('portion_weight', sa.Numeric(scale=2), nullable=True),
    sa.Column('barcode', sqlmodel.sql.sqltypes.AutoString(length=64), nullable=False),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('edit_locked', sa.Boolean(), nullable=False),
    sa.Column('creator_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['creator_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('ingredient',
    sa.Column('food_item_id', sa.Integer(), nullable=False),
    sa.Column('amount', sa.Numeric(scale=2), nullable=False),
    sa.Column('food_collection_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['food_collection_id'], ['foodcollection.id'], ),
    sa.ForeignKeyConstraint(['food_item_id'], ['fooditem.id'], ),
    sa.PrimaryKeyConstraint('food_item_id', 'food_collection_id')
    )
    op.create_table('meal',
    sa.Column('calories', sa.Numeric(scale=2), nullable=False),
    sa.Column('food_amount', sa.Numeric(scale=2), nullable=False),
    sa.Column('food_item_id', sa.Integer(), nullable=True),
    sa.Column('food_collection_id', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.Date(), nullable=False),
    sa.Column('is_shared', sa.Boolean(), nullable=False),
    sa.Column('mealtime_id', sa.Integer(), nullable=False),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('creator_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['creator_id'], ['user.id'], ),
    sa.ForeignKeyConstraint(['food_collection_id'], ['foodcollection.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['food_item_id'], ['fooditem.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('meal')
    op.drop_table('ingredient')
    op.drop_table('fooditem')
    op.drop_table('foodcollection')
    op.drop_table('user')
    # ### end Alembic commands ###
